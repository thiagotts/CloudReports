/* 
 * Copyright (c) 2010-2012 Thiago T. Sá
 * 
 * This file is part of CloudReports.
 *
 * CloudReports is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * CloudReports is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * For more information about your rights as a user of CloudReports,
 * refer to the LICENSE file or see <http://www.gnu.org/licenses/>.
 */

package cloudreports.gui;

import cloudreports.dao.SettingDAO;
import cloudreports.models.Setting;

/**
 * The SimulationSettings form.
 * Most of its code is generated automatically by the NetBeans IDE.
 * 
 * @author      Thiago T. Sá
 * @since       1.0
 */
public class SimulationSettings extends javax.swing.JDialog {

    /** Creates a new SimulationSettings form. */
    public SimulationSettings() {
        setModal(true);
        initComponents();
        SettingDAO sDAO = new SettingDAO();
        Setting numberOfSimulations = sDAO.getSetting("NumberOfSimulations");
        numOfSimulationsSpinner.setValue(Integer.valueOf(numberOfSimulations.getValue()));     
        Setting timeToSimulate = sDAO.getSetting("TimeToSimulate");
        timeToSimulateSpinner.setValue(Integer.valueOf(timeToSimulate.getValue()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numOfSimulationsLabel = new javax.swing.JLabel();
        numOfSimulationsSpinner = new javax.swing.JSpinner();
        okButton = new javax.swing.JButton();
        timeToSimulateLabel = new javax.swing.JLabel();
        timeToSimulateSpinner = new javax.swing.JSpinner();
        minutesLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Simulation settings");
        setResizable(false);

        numOfSimulationsLabel.setText("Number of repetitions:");

        numOfSimulationsSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        numOfSimulationsSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numOfSimulationsSpinnerStateChanged(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cloudreports/gui/resources/ok.png"))); // NOI18N
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        timeToSimulateLabel.setText("Time to simulate:");

        timeToSimulateSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(60), Integer.valueOf(1), null, Integer.valueOf(1)));
        timeToSimulateSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                timeToSimulateSpinnerStateChanged(evt);
            }
        });

        minutesLabel.setText("(minutes)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeToSimulateLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numOfSimulationsLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(timeToSimulateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minutesLabel))
                            .addComponent(numOfSimulationsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {numOfSimulationsSpinner, timeToSimulateSpinner});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeToSimulateLabel)
                    .addComponent(timeToSimulateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minutesLabel))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numOfSimulationsLabel)
                    .addComponent(numOfSimulationsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(okButton)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {numOfSimulationsSpinner, timeToSimulateSpinner});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** 
     * Changes the number of simulations to be performed whenever the state of the
     * simulations spinner changes.
     *
     * @param   evt     a change event.
     * @since           1.0
     */       
    private void numOfSimulationsSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numOfSimulationsSpinnerStateChanged
        SettingDAO sDAO = new SettingDAO();
        Setting numberOfSimulations = sDAO.getSetting("NumberOfSimulations");
        numberOfSimulations.setValue(String.valueOf(numOfSimulationsSpinner.getValue()));
        sDAO.updateSetting(numberOfSimulations);
    }//GEN-LAST:event_numOfSimulationsSpinnerStateChanged

    /** 
     * Closes the form when the OK button is clicked.
     *
     * @param   evt     an action event.
     * @since           1.0
     */        
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    /** 
     * Changes the time to be simulated by each performed simulation whenever
     * the state of the time to simulate spinner changes.
     *
     * @param   evt     a change event.
     * @since           1.0
     */       
    private void timeToSimulateSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeToSimulateSpinnerStateChanged
        SettingDAO sDAO = new SettingDAO();
        Setting timeToSimulate = sDAO.getSetting("TimeToSimulate");
        timeToSimulate.setValue(String.valueOf(timeToSimulateSpinner.getValue()));
        sDAO.updateSetting(timeToSimulate);
    }//GEN-LAST:event_timeToSimulateSpinnerStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel minutesLabel;
    private javax.swing.JLabel numOfSimulationsLabel;
    private javax.swing.JSpinner numOfSimulationsSpinner;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel timeToSimulateLabel;
    private javax.swing.JSpinner timeToSimulateSpinner;
    // End of variables declaration//GEN-END:variables
}
